process_name: PTBDump

services: {
#output file
  TFileService: { fileName: "new.root" }
}

#source is a root file
source:
{
  module_type: RootInput
  maxEvents:   100000000      # Number of events to create
}

outputs:
{
 out1: {
  module_type: FileDumperOutput
  wantProductFullClassName:     true
  wantProductFriendlyClassName: false
 }
}

physics:
{

 producers:{}

 filters:{}

 analyzers:{

   berncrtana: {
     module_type: PTBDump
   }

 }

 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]
 ana: [ berncrtana ]

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [ ana ]  
}

physics.analyzers.berncrtana.DumpFrags: true
physics.analyzers.berncrtana.SaveTriggers: true
